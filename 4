 set ns [new Simulator]
 set tf [open p4.tr w]
 $ns trace-all $tf
 set nf [open p4.nam w]
 $ns namtrace-all $nf
 set s [$ns node]
 set c [$ns node]
 $ns color 1 Blue
 $s label "server"
 $c label "client"
 #$c shape "box"
 #$s shape "box"
 $ns duplex-link $s $c 10Mb 10ms DropTail
 $ns duplex-link-op $s $c orient right
 set tcp0 [new Agent/TCP]
 $ns attach-agent $s $tcp0
 #$tcp0 set packetSize_ 1500
 set sink0 [new Agent/TCPSink]
 $ns attach-agent $c $sink0
 $ns connect $tcp0 $sink0
 set ftp0 [new Application/FTP]
 $ftp0 attach-agent $tcp0
 $tcp0 set fid_ 1
 proc finish { } {
 global ns tf nf
 $ns flush-trace
 close $tf
 close $nf
 puts "Nam file running"
 exec nam p4.nam &
 puts "after Nam file running"
 exec awk -f p4transfer.awk p4.tr &
 puts "awk"
 exec awk -f p4convert.awk p4.tr > convert.tr &
 exec xgraph convert.tr -geometry 800*400 -t "bytes_received_at_client" -x "time_in_secs" 
y"bytes_in_bps" &
 exit 0
 }
 $ns at 0.01 "$ftp0 start"
$ns at 15.0 "$ftp0 stop"
 $ns at 15.1 "finish"
 $ns run
 save this file as p4transfer.awk:
 p4transfer.awk BEGIN{ 
count=0; 
time=0; 
total_bytes_sent=0; 
total_bytes_received=0; 
}{ 
if($1=="r" && $4==1 && $5=="tcp") 
total_bytes_received+=$6; 
if($1=="+" && $3==0 && $5=="tcp") 
total_bytes_sent+=$6; 
}
 END{ 
system("clear"); 
printf("\nTransmission time to transfer file is %f",$2); 
printf("\nActual data sent from server is %f Mbps\n",(total_bytes_sent/1000000)); 
printf("Data received by the client is %f Mbps\n",(total_bytes_received/1000000)); 
} 
save this file as p4convert.awk:
 BEGIN{ 
count=0; 
time=0; 
}
 { 
if($1=="r" && $4==1 && $5=="tcp")
 { 
count+=$6; 
time=$2; 
printf("\n%f %f",time,(count/1000000)); 
}
 } 
END{
 } 
